{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\froman\fcharset0 Times-Roman;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgray\c0\c0;}
\margl1440\margr1440\vieww17020\viewh15060\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Daisy Chilin\
8/14/18\
Demultiplexing & Index Swapping\
\
GOAL: \
Look at library preps\
Determine the level of index swapping  and undetermined index-pairs\
	-before and after quality filtering of index reads\
-demultiplex data\
-create 48 files (index pairs -read1 and read2)\
\
\

\b Part 1- Quality Score Distribuition per-nucleotide
\b0 \
1.	Read 1:	\cf2 \cb3 \CocoaLigature0 1294_S1_L008_R1_001.fastq.gz \
	Index 1	1294_S1_L008_R2_001.fastq.gz \
	Read 2: 	1294_S1_L008_R4_001.fastq.gz \
	Index 2: 	1294_S1_L008_R3_001.fastq.gz \cf0 \cb1 \CocoaLigature1 \
2.\
a.  	4 graphs\
\
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
{{\NeXTGraphic unknown.png \width8960 \height5540 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\pardeftab720\sl280\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
{{\NeXTGraphic 1__#$!@%!#__unknown.png \width8580 \height5300 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\pardeftab720\sl280\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
{{\NeXTGraphic 2__#$!@%!#__unknown.png \width9120 \height5640 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 {{\NeXTGraphic 3__#$!@%!#__unknown.png \width9040 \height5580 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
B. 	Anything above a quality score above 30 is 99.9% correct. Above 40 is 99.99% .Both  indexes seem to range from 30-38 which is a hight quality score. I think great cutoff would be at 30.  If I cutoff anything above that, that will cut off more that 50% of my data. \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 C. 	Read 1 has \cf2 \cb3 \CocoaLigature0 3,976,613 indexes that have undetermined base calls (N)\
	Read 2 has 3,328,051.\
\cf0 \cb1 \CocoaLigature1 	My code : \cf2 \cb3 \CocoaLigature0 zcat 1294_S1_L008_R3_001.fastq.gz | grep "N" | grep -v "^@" | wc -l\CocoaLigature1 \
\cf0 \cb1 \
\
\

\b Part 2 - Develop an algorithm to de-multiple the samples
\b0 \
#create variables to easily call the files containing the reads and indexes (read 1, read 2, index 1, and index 2) \
R1 is file \cf2 \expnd0\expndtw0\kerning0
1294_S1_L008_R1_001.fastq.gz \
\cf0 \kerning1\expnd0\expndtw0 I1 is file \cf2 \expnd0\expndtw0\kerning0
1294_S1_L008_R1_002.fastq.gz \
\cf0 \kerning1\expnd0\expndtw0 R2 is file \cf2 \expnd0\expndtw0\kerning0
1294_S1_L008_R1_004.fastq.gz \
\cf0 \kerning1\expnd0\expndtw0 I2 is file \cf2 \expnd0\expndtw0\kerning0
1294_S1_L008_R1_003.fastq.gz 
\f1 \

\f0 \cf0 \kerning1\expnd0\expndtw0 \

\i #define a function where we can reverse an the sequence of an index
\i0 \
def reverse_complement(seq):\
	complement equals \{\'91A\'92:\'92T\'92, \'91C\'92:\'92G\'92, \'91G\'92:\'92C\'92, \'92T\'92:\'92A\'92\}\
	bases equals list(seq)\
	bases equals complement[base] for base in bases\
	return compliment([::-1])\
	\
\

\i #Define function for converting letters to to phred score
\i0 \
Def convert_phred(letter):\
	phred_score is equal to ord(letter) minus 33\
	return(phred_score)\
\
\
\

\i #you want to open all 4 files and read then all at the same time
\i0 \
with open (read R1) as file_R1, (read I1) as file_I1, (read R2) as file_R2, (read I2) as file_I2,  open (determine_newfileR1 to write) as dertermined_fileR1_out, (determine_newfileR2 to write) as dertermined_fileR2_out, (undetermine_newfileR2 to write) as undertermined_fileR1_out, (undetermine_newfileR2 to write) as undertermined_fileR2_out\
while true:\
		line 1 is equal to the file_head  in readline #header \
		if not line1:\
			break\
		line 2 equals file in readline  #sequence line \
		line 3 equals file in read-line # + line\
		line 4 equals file in readline # quality score line \
\
		
\i # call out all N and toss them into a file for R1 and R2
\i0 \
		 i = 0 #counter for how many lines have Ns\
		For N in line 2 of all the files:\
			if N is present :\
				out write it into the undetermined new files for both reads (whichever they correspond to, R1 or R2)\
				out write line 1-4 so it can be a FASTQ file\
			if not:\
				continue to the next step\
			increment 1 to i\
		\
		
\i #convert phred scores so we can check quality score cutoff
\i0 \
		line 4 equals line 4 strip new line\
		i = 0 # counter for quality scores\
		for character in line:\
			QS is equal to convert_phred(character)\
			increment 1 to i\
			#create a variable  with a specific cutoff \
			if QS is less than QS_cutoff:\
				out write it to the unacceptable pair reads under low quality for R1 or R2\
				add lines 1-4 for FASTQ file format \
			else:\
				continue\
			#reverse compliment the index and match them\
			i = 0\
			for  base in line\
				rc  is equal to reverse complement(base)\
				validate rc to indexes_file to confirm this index is from one of the 24 indexes provided to us\
				if rc equals to index from file I1\
					out write to acceptable index pair reads to the specific file that  matches that index file for either R1 or R2\
				increment so we know how many acceptable indexes did match\
			else: #if rc does not match index \
				out write to unacceptable pair reads for either R1 or R2\
\
\
\
#ideally, this code should spit out 48 files\
24 files for  acceptable index pairs from Read 1 (forward read)\
24 files for acceptable index pairs from Read 2 (reverse read)\
1 file  for unacceptable index pairs for Read 1 that contains  low QS and undetermined (N)\
1 file for unacceptable index pairs for Read 2 that contains low QS and undertminded (N)\
\
#create a file that contains the 24 index\
indexes_file\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
B1 	GTAGCGTA \cf0 \kerning1\expnd0\expndtw0 \
 A5 	\cf2 \expnd0\expndtw0\kerning0
CGATCGAT \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
C1	GATCAAGG \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
B9 	AACAGCGA \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
C9 	TAGCCATG \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
C3  	CGGTAATC \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
B3 	CTCTGGAT \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
C4 	TACCGGAT \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
A11  	CTAGCTCA \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
C7 	CACTTCAC \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
B2  	GCTACTCT \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
A1  	ACGATCAG \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
B7 	TATGGCAC \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
A3  	TGTTCCGT \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
B4 	GTCCTAAG 
\b \cf0 \kerning1\expnd0\expndtw0 \

\b0 \cf2 \expnd0\expndtw0\kerning0
A12 	TCGACAAG \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
C10 	TCTTCGAC \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
A2 	ATCATGCG \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
C2  	ATCGTGGT \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
A10 	TCGAGAGT \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
B8  	TCGGATTC \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
A7	GATCTTGC \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
B10	AGAGTCCA \cf0 \kerning1\expnd0\expndtw0 \
\cf2 \expnd0\expndtw0\kerning0
A8	AGGATAGC \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f2 \cf0 \
After you have ran the code, you should expect:\
48 files like this\
1 acceptable_B1_index_pair_read_1.fq\
2 acceptable_B1_index_pair _read 2.fq\
3 acceptable_A5_index_pair_read_1.fq\
4 acceptable_A5_index_pair _read_2.fq\
.\
.\
.\
.\
You should also expect 2 more files for undetermined paired reads \
underterminded_read_1.fq\
Underterminded_read_2.fq\
These two files will have low quality and  undetermined indexes (N)\
\
\
\
\
\
}